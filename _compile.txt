--compile debug
make debug
make debug CC=clang

--compile release
make
make CC=clang

--debug
gdb -tui ./bin/ncsh
c - continue
s - step
n - step over

--leak checking
gcc -std=c99 -Wall -Wextra -Werror -pedantic-errors -Wformat=2 -fsanitize=address,undefined *.c -o ncsh
clang -std=c99 -Wall -Wextra -Werror -pedantic-errors -Wformat=2 -fsanitize=address,undefined *.c -o ncsh
valgrind --leak-check=yes ./bin/ncsh
valgrind --leak-check=full ./bin/ncsh
valgrind --track-fds=yes ./bin/ncsh
valgrind --leak-check=yes --track-fds=yes ./bin/ncsh

--profiling
gcc -std=c99 -Wall -Wextra -Werror -pedantic-errors -Wformat=2 -O3 -DNDEBUG -pg *.c -o bin/ncsh
clang -std=c99 -Wall -Wextra -Werror -pedantic-errors -Wformat=2 -O3 -DNDEBUG -pg *.c -o bin/ncsh
1. compile with -pg
2. run program
3. generate report: gprof gmon.out > analysis.txt
4. review analysis.txt

--z
gcc -std=c2x -Wall -pedantic-errors -Wformat=2 -fsanitize=address,undefined,leak -g ../eskilib/eskilib_string.c ../eskilib/eskilib_file.c *.c -o z

gcc -std=c2x -Wall -Wextra -Werror -pedantic-errors -Wformat=2 -g -fsanitize=address,undefined,leak ../eskilib/eskilib_string.c ../eskilib/eskilib_file.c *.c -o z

