docker
sudo docker build . --tag ncsh-docked --file ./dockerfile
sudo docker run -d ncsh-docked

gcc -std=c99 -Wall -Wextra -Werror -pedantic-errors -Wformat=2 -fsanitize=address,undefined *.c -o ncsh

--compile debug
make
--compile release
make -f makefile.release

--leak checking
gcc -std=c99 -Wall -Wextra -Werror -pedantic-errors -Wformat=2 -fsanitize=address,undefined *.c -o ncsh
clang -std=c99 -Wall -Wextra -Werror -pedantic-errors -Wformat=2 -fsanitize=address,undefined *.c -o ncsh
valgrind --leak-check=yes ./ncsh

--profiling
gcc -std=c99 -Wall -Wextra -Werror -pedantic-errors -Wformat=2 -O3 -DNDEBUG -pg *.c -o ncsh
clang -std=c99 -Wall -Wextra -Werror -pedantic-errors -Wformat=2 -O3 -DNDEBUG -pg *.c -o ncsh
1. compile with -pg
2. run program
3. generate report: gprof ncsh gmon.out > analysis.txt
4. review analysis.txt

--debugging
gcc -std=c99 -Wall -Wextra -Werror -pedantic-errors -Wformat=2 -fsanitize=address,undefined -g *.c -o ncsh
clang -std=c99 -Wall -Wextra -Werror -pedantic-errors -Wformat=2 -fsanitize=address,undefined -g *.c -o ncsh

--tests
gcc -std=c2x -Wall -Wextra -Werror -pedantic-errors -Wformat=2 -fsanitize=address,undefined ./eskilib/eskilib_string.c ./eskilib/eskilib_test.c ncsh_parser.c ./tests/ncsh_parser_tests.c ncsh_args.c -o ncsh_parser_tests
